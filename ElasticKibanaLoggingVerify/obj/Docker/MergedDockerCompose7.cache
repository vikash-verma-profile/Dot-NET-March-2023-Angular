name: dockercompose5440325329237347319
services:
  elastickibanaloggingverify:
    build:
      context: C:\Users\LEVEL UP SOLUTIONS 1\Desktop\DOT-NET_ANGULAR\ElasticKibanaLoggingVerify
      dockerfile: ElasticKibanaLoggingVerify/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: elastickibanaloggingverify
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\LEVEL UP SOLUTIONS 1\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\LEVEL UP SOLUTIONS 1\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  elasticsearch:
    container_name: elasticsearch
    environment:
      ES_JAVA_OPTS: -Xms512m -Xmz512m
      discovery.type: single-node
      xpack.monitoring.enabled: "true"
      xpack.watcher.enabled: "false"
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
    networks:
      elastic: null
    ports:
    - mode: ingress
      target: 9200
      published: "9200"
      protocol: tcp
    volumes:
    - type: volume
      source: elasticsearch-data
      target: /usr/share/elasticsearch/data
      volume: {}
  kibana:
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: http://localhost:9200
    image: docker.elastic.co/kibana/kibana:8.6.2
    networks:
      elastic: null
    ports:
    - mode: ingress
      target: 5601
      published: "5601"
      protocol: tcp
networks:
  default:
    name: dockercompose5440325329237347319_default
  elastic:
    name: dockercompose5440325329237347319_elastic
    driver: bridge
volumes:
  elasticsearch-data:
    name: dockercompose5440325329237347319_elasticsearch-data